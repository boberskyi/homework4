{"ast":null,"code":"var _jsxFileName = \"/Users/bohdanboberskyi/Downloads/hws2-master/src/s2-homeworks/hw04/common/c2-SuperButton/SuperButton.tsx\";\nimport React from 'react';\nimport s from './SuperButton.module.css';\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SuperButton = _ref => {\n  let {\n    xType,\n    className,\n    disabled,\n    ...restProps // все остальные пропсы попадут в объект restProps, там же будет children\n  } = _ref;\n  const finalClassName = s.button + ' ' + (xType === 'red' && !disabled ? s.red : xType === 'secondary' ? s.secondary : disabled ? s.disabled : s.default)\n  // + (disabled\n  //         ? ...\n  //         : xType === 'red'\n  //             ? ...\n  + (className ? ' ' + className : ''); // задачка на смешивание классов\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    disabled: disabled,\n    className: finalClassName,\n    ...restProps\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_c = SuperButton;\nexport default SuperButton;\nvar _c;\n$RefreshReg$(_c, \"SuperButton\");","map":{"version":3,"names":["React","s","SuperButton","xType","className","disabled","restProps","finalClassName","button","red","secondary","default"],"sources":["/Users/bohdanboberskyi/Downloads/hws2-master/src/s2-homeworks/hw04/common/c2-SuperButton/SuperButton.tsx"],"sourcesContent":["import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>,\n  HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n  xType?: string\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n  {\n    xType,\n    className,\n    disabled,\n    ...restProps // все остальные пропсы попадут в объект restProps, там же будет children\n  }\n) => {\n  const finalClassName = s.button\n    + ' '\n    + (xType === 'red' && !disabled ? s.red\n        : xType === 'secondary' ? s.secondary\n          : disabled ? s.disabled\n            : s.default\n    )\n    // + (disabled\n    //         ? ...\n    //         : xType === 'red'\n    //             ? ...\n    + (className ? ' ' + className : '') // задачка на смешивание классов\n\n  return (\n    <button\n      disabled={disabled}\n      className={finalClassName}\n      {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n    />\n  )\n}\n\nexport default SuperButton\n"],"mappings":";AAAA,OAAOA,KAAK,MAAiD,OAAO;AACpE,OAAOC,CAAC,MAAM,0BAA0B;;AAExC;AAAA;AAQA,MAAMC,WAA2C,GAAG,QAO/C;EAAA,IANH;IACEC,KAAK;IACLC,SAAS;IACTC,QAAQ;IACR,GAAGC,SAAS,CAAC;EACf,CAAC;EAED,MAAMC,cAAc,GAAGN,CAAC,CAACO,MAAM,GAC3B,GAAG,IACFL,KAAK,KAAK,KAAK,IAAI,CAACE,QAAQ,GAAGJ,CAAC,CAACQ,GAAG,GACjCN,KAAK,KAAK,WAAW,GAAGF,CAAC,CAACS,SAAS,GACjCL,QAAQ,GAAGJ,CAAC,CAACI,QAAQ,GACnBJ,CAAC,CAACU,OAAO;EAEnB;EACA;EACA;EACA;EAAA,GACGP,SAAS,GAAG,GAAG,GAAGA,SAAS,GAAG,EAAE,CAAC,EAAC;;EAEvC,oBACE;IACE,QAAQ,EAAEC,QAAS;IACnB,SAAS,EAAEE,cAAe;IAAA,GACtBD;EAAS;IAAA;IAAA;IAAA;EAAA,QACb;AAEN,CAAC;AAAA,KA5BKJ,WAA2C;AA8BjD,eAAeA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}